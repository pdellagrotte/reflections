What happens when you initialize a repository? Why do you need to do it?
- It creates a hidden directory that tracks the git repository and commit history. To do this you type $ git init; $ git status shows the status of the repo


How is the staging area different from the working directory and the repository? What value do you think it offers?
-- The staging area is a place for files to be committed so you can track changes on certain files instead of every file in the repo. The working directory is just the current directory which may be a clone of the repo.

How can you use the staging area to make sure you have one commit per logical change?
-- Take care to only commit files that have meaningful changes, instead of updating anything that has changed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
--If you wanted to create specific modifications for experimental purposes or add new features for a different audience (like a language). Branches keep them seperate.

How do the diagrams help you visualize the branch structure?
-- It shows the different branchs and the parent-child relationships between commits

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
-- The result is completed changes for only the lines that have been added or removed between two brances. It is represented in a diagram to give a visual of what branches are available and what commits they contain before a merge happens.