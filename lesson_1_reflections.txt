How did viewing a diff between two versions of a file help you see the bug that was introduced?

-- It compared the specific lines where something had changed; I looked at lines that had changed and noted the 'spacr' error (space)

How could having easy access to the entire history of a file make you a more efficient programmer in the long term
-- I don't have to save files manually to view things that may have changed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
--Pro is that trivial changes will not be saved
--Con is that you could lose work if you do not commit at regular intervals

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
--Software like Google Docs are usually only dealing with single files that do not interelate to other files, while Git deals with file types that do interalate such as CSS/ HTML

How can you use the commands git log and git diff to view the history of files?
-- $ git log shows all of the commit history for a repository (group of file) and the IDs of each commit. $ git diff can compare two IDs to show what changed (lines added / subtracted)

How might using version control make you more confident to make changes that could break something?
-- I will have a better idea what changes caused a bug and be able to revert back to a copy before the bug was introduced

Now that you have your workspace set up, what do you want to try using Git for?
-- Make web page updates and start creating portfolio with commit history